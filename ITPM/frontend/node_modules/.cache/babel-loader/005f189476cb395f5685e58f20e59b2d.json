{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITP_Project\\\\frontend\\\\src\\\\components\\\\UpdateMaterial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport \"./AddMaterial.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMaterial() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [materials, setMaterials] = useState({\n    matname: \"\",\n    matcategory: \"\",\n    matunit: \"\",\n    maxlevel: \"\",\n    amtissued: \"\",\n    matunitprice: \"\",\n    mtotcost: \"\"\n  });\n  const {\n    matname,\n    matcategory,\n    matunit,\n    maxlevel,\n    amtissued,\n    matunitprice,\n    mtotcost\n  } = materials;\n\n  const onInputChange = e => {\n    setMaterials({ ...materials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    loadMaterial();\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await axios.put(`http://localhost:8050/material/updated/${id}`, materials);\n    history.push('/all');\n  };\n\n  const loadMaterial = async () => {\n    const result = await axios.get(`http://localhost:8050/material/gets/${id}`);\n    setMaterials(result.data);\n  };\n  /*\r\n    \r\n  \r\n    function EditInventory(props) {\r\n    let id = props.match.params.id;\r\n  \r\n    const [data, setData] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      axios.get(`http://localhost:8050/inventory/${id}`).then((res) => {\r\n        setData(res.data);\r\n        console.log(res.data);\r\n      }).catch((err)=>{\r\n        console.log(err);\r\n      })\r\n    },[])\r\n  \r\n    const onInputChange = e => {\r\n      const { name, value } = e.target;\r\n      setData({ ...data, [name]: value });\r\n    };\r\n  \r\n  \r\n  \r\n    function onSubmit() {\r\n  \r\n      axios.put(`http://localhost:8050/inventory/update/${id}`, data).then(()=>{\r\n        alert(\"Updated successfully\"); \r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n      window.location.replace('/');\r\n    };\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mat\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Update Raw Material Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gl-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"id\",\n          className: \"form-label\",\n          children: \"Material ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Update\\xA0maeterial\\xA0ID\",\n          name: \"id\",\n          value: id,\n          onChange: e => onInputChange(e),\n          readOnly: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 1\n  }, this);\n}\n\n_s(UpdateMaterial, \"OmnTzfsssxclaAxdLIOIlXNqnS0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = UpdateMaterial;\nexport default UpdateMaterial;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMaterial\");","map":{"version":3,"sources":["D:/ITP_Project/frontend/src/components/UpdateMaterial.js"],"names":["React","useState","useEffect","axios","useHistory","useParams","UpdateMaterial","history","id","materials","setMaterials","matname","matcategory","matunit","maxlevel","amtissued","matunitprice","mtotcost","onInputChange","e","target","name","value","loadMaterial","onSubmit","preventDefault","put","push","result","get","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport \"./AddMaterial.css\";\r\n\r\n\r\nfunction UpdateMaterial() {\r\n\r\n\r\n let history = useHistory();\r\n const {id} = useParams();\r\n const [materials,setMaterials]= useState({\r\n \r\n    matname: \"\", \r\n    matcategory: \"\",\r\n    matunit: \"\",\r\n    maxlevel: \"\",\r\n    amtissued: \"\",\r\n    matunitprice: \"\",\r\n    mtotcost: \"\"\r\n \r\n\r\n });\r\n   \r\n const{matname, matcategory,matunit,maxlevel, amtissued,matunitprice,mtotcost} = materials;\r\n const onInputChange = e =>{\r\n   setMaterials({...materials, [e.target.name]:e.target.value});\r\n };\r\n   \r\n    \r\n      useEffect(() =>{\r\n    loadMaterial();\r\n }, []);    \r\n\r\n   const onSubmit = async e =>{\r\n   e.preventDefault();\r\n\r\n   await axios.put(`http://localhost:8050/material/updated/${id}`,materials)\r\n     history.push('/all');\r\n\r\n\r\n     };\r\n\r\n\r\n     const loadMaterial = async () =>{\r\n\r\n       const result = await axios.get(`http://localhost:8050/material/gets/${id}`);\r\n       setMaterials(result.data);\r\n       \r\n     };\r\n\r\n/*\r\n  \r\n\r\n  function EditInventory(props) {\r\n  let id = props.match.params.id;\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8050/inventory/${id}`).then((res) => {\r\n      setData(res.data);\r\n      console.log(res.data);\r\n    }).catch((err)=>{\r\n      console.log(err);\r\n    })\r\n  },[])\r\n\r\n  const onInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n\r\n\r\n  function onSubmit() {\r\n\r\n    axios.put(`http://localhost:8050/inventory/update/${id}`, data).then(()=>{\r\n      alert(\"Updated successfully\"); \r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n    window.location.replace('/');\r\n  };\r\n*/\r\nreturn (\r\n<div>\r\n<div className=\"mat\">\r\n      <span>Update Raw Material Item</span></div>\r\n      <form onSubmit={e => onSubmit(e)}> \r\n\r\n    \r\n<div className=\"gl-0\"><label for=\"id\" className=\"form-label\">Material ID</label>\r\n<input type=\"text\" className=\"form-control\"  placeholder=\"Update maeterial ID\" name=\"id\" value ={id} onChange={(e)=>onInputChange(e)} readOnly required /></div></form>\r\n</div>\r\n\r\n\r\n    \r\n      \r\n\r\n      \r\n                                   \r\n                                    );\r\n                                  }\r\nexport default UpdateMaterial;"]},"metadata":{},"sourceType":"module"}